NAME
    CatalystX::Controller::Sugar - Extra sugar for Catalyst controller

VERSION
    0.01

SYNOPSIS
     use CatalystX::Controller::Sugar;

     private foo => sub {
       res->body("Hey!");
     };

     chained "/" => "age" => ['age'], sub {
       stash multiplier => 2;
       res->print( captured('age') );
     };

     chained "/age" => "endpoint" => sub {
       my $twice = stash("multiplier") * captured('age');
       res->body( "Twice the age is: $twice" );
     };

     chained "/" => "multimethod" => {
       post => sub { ... },
       get => sub { ... },
       delete => sub { ... },
       default => sub { ... },
     };

NOTE
    $self and $c is not part of the argument list inside a chained() or
    private() action. $c is acquired by calling c(), and $self is available
    by calling controller().

EXPORTED FUNCTIONS
  chained
     chained $PathPart => sub { };
     chained $Chained => $PathPart => sub { };
     chained $Chained => $PathPart => \@CaptureArgs, sub { };
     chained $Chained => $PathPart => $Args => sub { };
     chained $Chained => $PathPart => ..., \%method_map;

    Same as:

     sub "$PathPart" : Global($PathPart) { }
     sub "$Chained/$PathPart" : Chained() PathPart() Args { }
     sub "$Chained/$PathPart" : Chained() PathPart() CaptureArgs() { }
     sub "$Chained/$PathPart" : Chained() PathPart() Args() { }

    @CaptureArgs is a list of names of the captured argumenst, which can be
    retrieved using captured().

    $Args is a number of Args to capture at the endpoint of a chain. These
    cannot be aquired using captured(), but is instead available in @_.

    %method_map can be used if you want to dispatch to a specific method,
    for a certain HTTP method: (The HTTP method is in lowercase)

     %method_map = (
        post => sub { ... },
        get => sub { ... },
        delete => sub { ... },
        default => sub { ... },
        #...
     );

  private
     private $name => sub {};

    Same as:

     sub $name :Private {};

  c
     $context_obj = c;

    Returns the context object for this request.

  controller
     $controller_obj = controller;

    Returns the controller class.

  req
     $request_obj = req;

    Returns the request object for this request.

  res
     $response_obj = res;

    Returns the response object for this request.

  captured
     $value = captured($name);

    Retrieve data captured in a chain, using the names set with chained().

     chained "/" => "user" => ["id"], sub {
       res->body( captured("id") );
     };

  stash
     $hash_ref = stash $key => $value, ...;
     $value = stash $key;

    Set/get data from the stash.

  session
     $hash_ref == session $key => $value;
     $value = session $key;

    Set/get data from the session.

  init_meta
    See Moose::Exporter.

BUGS
    Please report any bugs or feature requests to
    "bug-catalystx-controller-sugar at rt.cpan.org", or through the web
    interface at
    <http://rt.cpan.org/NoAuth/ReportBug.html?Queue=CatalystX-Controller-Sug
    ar>. I will be notified, and then you'll automatically be notified of
    progress on your bug as I make changes.

COPYRIGHT & LICENSE
    Copyright 2007 Jan Henning Thorsen, all rights reserved.

    This program is free software; you can redistribute it and/or modify it
    under the same terms as Perl itself.

AUTHOR
    Jan Henning Thorsen, "<jhthorsen at cpan.org>"

